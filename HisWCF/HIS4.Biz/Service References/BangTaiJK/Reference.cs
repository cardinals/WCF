//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HIS4.Biz.BangTaiJK {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BangTaiJK.IBonsTech")]
    public interface IBonsTech {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBonsTech/GetMessage", ReplyAction="http://tempuri.org/IBonsTech/GetMessageResponse")]
        string GetMessage(string MethodName, string parameter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBonsTechChannel : HIS4.Biz.BangTaiJK.IBonsTech, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BonsTechClient : System.ServiceModel.ClientBase<HIS4.Biz.BangTaiJK.IBonsTech>, HIS4.Biz.BangTaiJK.IBonsTech {
        
        public BonsTechClient() {
        }
        
        public BonsTechClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BonsTechClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BonsTechClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BonsTechClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetMessage(string MethodName, string parameter) {
            return base.Channel.GetMessage(MethodName, parameter);
        }
    }
}
